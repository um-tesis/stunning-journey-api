# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateOrganizationInput {
  address: String
  email: String
  facebook_account: String
  field: String!
  instagram_account: String
  name: String!
  organization_id: Int
  twitter_account: String
  web: String
}

input CreateProjectInput {
  end_date: DateTime
  field: String!
  monetary_objective: Int
  name: String!
  organization_id: Int!
  project_id: Int
  start_date: DateTime
}

input CreateUserInput {
  email: String!
  id: Int
  organization_id: Int
  password: String!
  phone: String
  role: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LogInModelIn {
  email: String!
  password: String!
}

type LogInModelOut {
  token: String!
  user: User!
}

type Mutation {
  createOrganization(createOrganizationInput: CreateOrganizationInput!): Organization!
  createProject(createProjectInput: CreateProjectInput!): Project!
  createUser(createUserInput: CreateUserInput!): User!
  removeOrganization(organization_id: Int!): Organization!
  removeProject(project_id: Int!): Project!
  removeUser(id: Int!): User!
  updateOrganization(updateOrganizationInput: UpdateOrganizationInput!): Organization!
  updateProject(updateProjectInput: UpdateProjectInput!): Project!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Organization {
  address: String
  facebook_account: String
  field: String!
  instagram_account: String
  name: String!
  organization_id: Int!
  twitter_account: String
  web: String
}

type Project {
  end_date: DateTime
  field: String!
  monetary_objective: Int
  name: String!
  organization_id: Int!
  project_id: Int!
  start_date: DateTime
}

type Query {
  login(logInModelIn: LogInModelIn!): LogInModelOut!
  organization(organization_id: Int!): Organization!
  organizationProjects(organization_id: Int!): [Project!]!
  organizations: [Organization!]!
  project(project_id: Int!): Project!
  projects: [Project!]!
  user(id: Int!): User!
  users: [User!]!
  usersByOrganizationId(organization_id: Int!): [User!]!
}

input UpdateOrganizationInput {
  """
  The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
  """
  Int: Float!
  address: String
  email: String
  facebook_account: String
  field: String
  instagram_account: String
  name: String
  organization_id: Int
  twitter_account: String
  web: String
}

input UpdateProjectInput {
  end_date: DateTime
  field: String
  monetary_objective: Int
  name: String
  organization_id: Int
  project_id: Int!
  start_date: DateTime
}

input UpdateUserInput {
  """
  The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
  """
  Int: Float!
  email: String
  id: Int
  organization_id: Int
  password: String
  phone: String
  role: Int
}

type User {
  email: String!
  id: Int!
  organization_id: Int
  password: String!
  phone: String
  role: Int!
}